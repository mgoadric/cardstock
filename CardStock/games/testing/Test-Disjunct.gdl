;; Disjunction Test
;;
;; Used to test the disjunction function in ReCYCLE v0.5

(game
    (declare 2 'NUMP)
    (setup
        (create players 'NUMP)
        ;; create deck
        (create deck (game iloc STOCK) (deck (RANK (ONE, TWO, THREE)) 
                                             (COLOR (RED (SUIT (HEARTS))))))
        (create deck (game iloc STOCK) (deck (RANK (ONE, TWO, THREE, FOUR)) 
                                             (COLOR (BLACK (SUIT (CLUBS))))))
        (create deck (game iloc STOCK) (deck (RANK (ONE, TWO, THREE)) 
                                             (COLOR (RED (SUIT (DIAMONDS))))))
        (create deck (game iloc STOCK) (deck (RANK (ONE, TWO, THREE, FOUR)) 
                                             (COLOR (BLACK (SUIT (SPADES))))))
        (create deck (game iloc SHUFFLE) (deck (RANK (ONE, TWO, THREE, FOUR)) 
                                             (COLOR (BLACK (SUIT (SPADES)))))))
    
    ;; "shuffle" and deal
    (do
        (
            (shuffle (game iloc SHUFFLE))
            (all player 'P
                (repeat 7
                    (move (top (game iloc STOCK))
                          (top ('P iloc HAND)))))
            (all player 'P
                (set ('P sto SCORE) 0))))

    (stage player
        (end
            (all player 'P
                (== (size ('P iloc HAND)) 0)))
        (choice
            (
                (repeat all
                    (move (top ((current player) iloc HAND))
                          (top ((current player) vloc TRICK)))))))

    ;; check for size of disjunction
    (do
        (
            (set (game sto DIS) (size (disjunction (all player 'P ('P vloc TRICK)))))
            (set (game sto DISUNION) (size (disjunction (union (all player 'P ('P vloc TRICK))) ((current player) vloc TRICK))))
            ((== (size (disjunction (all player 'P ('P vloc TRICK)))) 14)
                (all player 'P (inc ('P sto SCORE) 1)))
            ((== (size (disjunction (union (all player 'P ('P vloc TRICK))) ((current player) vloc TRICK))) 7)
                (all player 'P (inc ('P sto SCORE) 2)))))

    (scoring max ((current player) sto SCORE)))