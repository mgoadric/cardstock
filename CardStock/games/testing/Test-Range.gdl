;; Range Test
;;
;; Used to test new changes in the ReCYCLE v0.5 language

(game
    (declare 4 'NUMP)
    (setup
        (create players 'NUMP)
        (create teams (0) (1) (2) (3))
        ;; Create the deck
        (create deck (game iloc STOCK) (deck (RANK (ACE, TWO, THREE, FOUR, FIVE, SIX, SEVEN))
                                             (COLOR (RED (SUIT (HEARTS, DIAMONDS)))
                                                    (BLACK (SUIT (SPADES, CLUBS))))))
        (create deck (game iloc STOCK) (deck (RANK (JOKER)))))
    
    (stage player
        (end
            (all player 'P
                (!= ('P sto BID) 0)))
        (choice
            (
                (any (range 1..10) 'B
                    (set ((current player) sto BID) 'B)))))

    ;; shuffle deck, deal cards.
    (do
        (
            (shuffle (game iloc STOCK))
            (all player 'P
                (repeat 3
                    (move (top (game iloc STOCK))
                          (top ('P iloc HAND)))))))
    
    ;; Everyone plays exactly one round
    (stage player
        (end
            (all player 'P
                (== (size ('P vloc TRICK)) 1)))
        (choice
            (
                (any ((current player) iloc HAND) 'C
                    (move 'C
                        (top ((current player) vloc TRICK)))))))
                    
    ;; Create Scoring System
    (do
        (
            (set (game points SCORE)
                (
                    ((RANK (JOKER)) 10)
                    ((RANK (SEVEN)) 7)
                    ((RANK (SIX))   6)
                    ((RANK (FIVE))  5)
                    ((RANK (FOUR))  4)
                    ((RANK (THREE)) 3)
                    ((RANK (TWO))   2)
                    ((RANK (ACE))   1)))
            (all player 'P
                (do
                    (
                        ((>= (sum ((current player) vloc TRICK) using (game points SCORE)) ('P sto BID)) (inc ('P sto POINTS) ('P sto BID)))
                        ((< (sum ((current player) vloc TRICK) using (game points SCORE)) ('P sto BID)) (dec ('P sto POINTS) ('P sto BID))))))))

(scoring max ((current player) sto POINTS)))