;; Euchre
;;
;; https://www.pagat.com/euchre/euchre.html

(game
 
 (setup 
  ;; Set up the players, 2 teams of 2 players, alternating
  (create players 4)
  (create teams (0, 2) (1, 3))
  
  ;; Create the deck source
  (create deck (game iloc STOCK) (deck (RANK (NINE, TEN, J, Q, K, A))
                                         (COLOR (RED (SUIT (HEARTS, DIAMONDS)))
                                                (BLACK (SUIT (CLUBS, SPADES)))))))        
 
 ;; Stages of the game
        (do 
            (
            ;; JUST FOR TESTING
             (set ((team (current player)) str BID) MAKER)
             (set ((team (next player)) str BID) DEFENDER)

             (shuffle (game iloc STOCK))
             (all player 'P
                  (repeat 5
                        (move (top (game iloc STOCK))
                              (top ('P iloc HAND)))))
             (move (top (game iloc STOCK))
                   (top (game vloc TURNED)))
             (set (game str TRUMPSUIT) (cardatt SUIT (top (game vloc TURNED))))
             (set (game str TRUMPCOLOR) (cardatt COLOR (top (game vloc TURNED))))
            ))
                       
        
        ;; DETERMINE THE TRUMP AND BIDDING TEAM
        ;;(stage player
        ;;       (end 
        ;;       (or (all player 'P (== ('P str BID) PASS))
        ;;           (any team 'T (== ('T str BID) MAKER))))
                   
        ;;)

        ;; players play a round 5 times     
        (stage player
               (end 
                (all player 'P 
                     (== (size ('P iloc HAND)) 0)))
               
               ;; players play a hand once
               (stage player
                      (end 
                       (all player 'P
                            (> (size ('P vloc TRICK)) 0)))
                      
                      (choice 
                       (

                        ;; NEED TO MAKE J of TRUMP COLOR ONLY FOLLOW SUiT FOR TRUMP, NOT THE REAL SUIT
                        
                        ;; if first player, play any card, remember it in the lead spot
                        ((== (size (game mem LEAD)) 0)                       
                         (any ((current player) iloc HAND) 'C
                              (do 
                                  (
                                   (move 'C 
                                         (top ((current player) vloc TRICK)))
                                   (remember (top ((current player) vloc TRICK)) 
                                             (top (game mem LEAD)))))))
                                             
                        ;; if following player and cannot follow SUIT
                        ;;   play any card
                        ((and (== (size (game mem LEAD)) 1)
                              (== (size (filter ((current player) iloc HAND) 'L 
                                                (== (cardatt SUIT 'L) 
                                                    (cardatt SUIT (top (game mem LEAD)))))) 0))
                         (any ((current player) iloc HAND) 'C
                              (move 'C 
                                    (top ((current player) vloc TRICK)))))
                        
                        ;; if following player and can follow SUIT
                        ;;   play any card that follows SUIT
                        ((== (size (game mem LEAD)) 1)
                         (any (filter ((current player) iloc HAND) 'L 
                                      (== (cardatt SUIT 'L)
                                          (cardatt SUIT (top (game mem LEAD))))) 
                              'C
                              
                              (move 'C 
                                    (top ((current player) vloc TRICK)))))
                        
                        )))
               
               ;; after players play hand, computer wraps up trick
               (do (
                    ;; solidfy card recedence
                    (set (game points PRECEDENCE)
                         (
                          ((SUIT : (game str TRUMPSUIT)) 200)
                          ((RANK : J) (SUIT : (game str TRUMPSUIT)) 1)
                          ((RANK : J) (COLOR : (game str TRUMPCOLOR)) 5)
                          ((SUIT : (cardatt SUIT (top (game mem LEAD)))) 100)
                          ((RANK : A) 14)
                          ((RANK : K) 13) 
                          ((RANK : Q) 12)
                          ((RANK : J) 11)
                          ((RANK : TEN) 10)
                          ((RANK : NINE) 9)))
                    
                    ;; determine who won the hand, set them first next time, and give them a point
                    (forget (top (game mem LEAD)))
                    (cycle next (owner (max (union (all player 'P 
                                                        ('P vloc TRICK))) using (game points PRECEDENCE))))
                    (inc ((next player) sto TRICKSWON) 1)   
                    
                    ;; discard all the played cards
                    (all player 'P
                         (move (top ('P vloc TRICK)) 
                               (top (game vloc DISCARD)))))))
        
        ;; determine team score
        (stage team
               (end 
                (all player 'P 
                     (== ('P sto TRICKSWON) 0)))
               (do 
                   (
                    
                    ;; team made their cumulative bid, score positive points
                    (set ((current team) sto TRICKSWON) 0)
                    (all (current team) 'TP
                         (do 
                             (
                              (inc ((current team) sto TRICKSWON) ('TP sto TRICKSWON))
                              (set ('TP sto TRICKSWON) 0))))
                    ((and (>= ((current team) sto TRICKSWON) 3)
                          (== ((current team) str BID) MAKER))
                     (inc ((current team) sto SCORE) 1))
                    ((and (== ((current team) sto TRICKSWON) 5)
                          (== ((current team) str BID) MAKER))
                     (inc ((current team) sto SCORE) 1))
                    ((and (>= ((current team) sto TRICKSWON) 3)
                          (== ((current team) str BID) DEFENDER))
                     (inc ((current team) sto SCORE) 2))  
                     )))
 
 (scoring max ((team (current player)) sto SCORE)))



