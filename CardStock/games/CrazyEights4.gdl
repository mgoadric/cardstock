;; Crazy Eights
;;
;; https://www.pagat.com/eights/crazy8s.html

(game
 (declare (HEARTS, DIAMONDS, CLUBS, SPADES) 'SUITS)
 (setup  
  ;; Set up the players, 4 players each on their own team
  (create players 4)
  (create teams (0) (1) (2) (3))
  
  ;; Create the deck source
  (create deck (game iloc STOCK) (deck (RANK (A, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, TEN, J, Q, K))
                                       (COLOR (RED (SUIT (HEARTS, DIAMONDS)))
                                              (BLACK (SUIT (CLUBS, SPADES)))))))         
 
 (do 
     (
      (set (game points SCORE)
           (
            ((RANK (A)) 1)
            ((RANK (K)) 10) 
            ((RANK (Q)) 10)
            ((RANK (J)) 10)
            ((RANK (TEN)) 10)
            ((RANK (NINE)) 9)
            ((RANK (EIGHT)) 50)
            ((RANK (SEVEN)) 7)
            ((RANK (SIX)) 6)
            ((RANK (FIVE)) 5)
            ((RANK (FOUR)) 4)
            ((RANK (THREE)) 3)
            ((RANK (TWO)) 2)))
      
      ;; Shuffle and give each player 5 cards
      (shuffle (game iloc STOCK))
      (all player 'P
           (repeat 5
                   (move (top (game iloc STOCK))
                         (top ('P iloc HAND)))))
      
      ;; Start the discard pile
      (move (top (game iloc STOCK))
            (top (game vloc DISCARD)))
      
      ;; If an eight on top, just pick HEARTS to be the start suit.
      ((== (cardatt RANK (top (game vloc DISCARD)))
               EIGHT)
       (set (game sto EIGHTSUIT) (SUIT (HEARTS))))))
 
 ;; Game over when any player has 0 cards in their hand
 (stage player
        (end 
         (any player 'P 
              (== (size ('P iloc HAND)) 0)))
        
        ;; player makes a choice
        (choice 
         (
          
          ;; Play a card that matches suit or rank on top of discard
          ((!= (cardatt RANK (top (game vloc DISCARD))) 
               EIGHT)
           (any (filter ((current player) iloc HAND) 'NH 
                        (or (== (cardatt SUIT 'NH)
                                (cardatt SUIT (top (game vloc DISCARD))))
                            (== (cardatt RANK 'NH)
                                (cardatt RANK (top (game vloc DISCARD))))))
                'C
                         
                         (move 'C 
                               (top (game vloc DISCARD)))))
           
          ;; play a card that matches the chosen suit for the EIGHT on discard
          ((== (cardatt RANK (top (game vloc DISCARD)))
               EIGHT)
           (any (filter ((current player) iloc HAND) 'NH 
                        (== (cardatt SUIT 'NH)
                            (cardatt SUIT (top (game str EIGHTSUIT)))))
                'C
                         
                         (move 'C 
                               (top (game vloc DISCARD)))))
          
          ;; Can play eight any time
          (any (filter ((current player) iloc HAND) 'NH 
                       (== (cardatt RANK 'NH)
                           EIGHT))
                       'C
                        (do
                            (
                             (move 'C 
                                   (top (game vloc DISCARD)))

                             (any 'SUITS 'S
                                  (set (game str EIGHTSUIT) 'S)))))                  
          
          ;; Draw from the Stock
          ((> (size (game iloc STOCK)) 0)
           (move (top (game iloc STOCK))
                 (top ((current player) iloc HAND))))
          
          ;; Pass and wait for the stock to be refilled
          ((== (size (game iloc STOCK)) 0)
           (turn pass))))
        
        ;; if STOCK is empty, resupply from discard
        (do 
            (             
             ((== (size (game iloc STOCK)) 0)
              (do 
                  (
                   (move (top (game vloc DISCARD))
                         (top (game vloc TEMP)))
                   (repeat all 
                           (move (top (game vloc DISCARD))
                                 (top (game iloc STOCK))))
                   (move (top (game vloc TEMP))
                         (top (game vloc DISCARD)))
                   (shuffle (game iloc STOCK))))))))
 
 ;; Player with the smallest hand size wins
 (scoring min (sum ((current player) iloc HAND) using (game points SCORE))))


