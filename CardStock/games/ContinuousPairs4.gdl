;; Continuous Pairs
;;
;; https://cheapass.com/wp-content/uploads/2018/02/PairsCompanionBookWebFeb2018.pdf

(game
 (declare 4 'NUMP)
 (setup  
  ;; Set up the players
  (create players 'NUMP)
  (create teams (0) (1) (2) (3))
  
  ;; Create the deck source
  (repeat 1 (create deck (game iloc STOCK) (deck (VALUE (ONE)))))         
  (repeat 2 (create deck (game iloc STOCK) (deck (VALUE (TWO)))))        
  (repeat 3 (create deck (game iloc STOCK) (deck (VALUE (THREE)))))         
  (repeat 4 (create deck (game iloc STOCK) (deck (VALUE (FOUR)))))       
  (repeat 5 (create deck (game iloc STOCK) (deck (VALUE (FIVE)))))        
  (repeat 6 (create deck (game iloc STOCK) (deck (VALUE (SIX)))))       
  (repeat 7 (create deck (game iloc STOCK) (deck (VALUE (SEVEN)))))         
  (repeat 8 (create deck (game iloc STOCK) (deck (VALUE (EIGHT)))))         
  (repeat 9 (create deck (game iloc STOCK) (deck (VALUE (NINE)))))       
  (repeat 10 (create deck (game iloc STOCK) (deck (VALUE (TEN)))))         
  )
 
 
 (do 
     (
      (set (game points POINTS)
           (
            ((VALUE (TEN)) 10)
            ((VALUE (NINE)) 9)
            ((VALUE (EIGHT)) 8)
            ((VALUE (SEVEN)) 7)
            ((VALUE (SIX)) 6)
            ((VALUE (FIVE)) 5)
            ((VALUE (FOUR)) 4)
            ((VALUE (THREE)) 3)
            ((VALUE (TWO)) 2)
            ((VALUE (ONE)) 1)))
      (set (game sto NUMP) 4)
      (shuffle (game iloc STOCK))
      (repeat 5
              (move (top (game iloc STOCK))
                    (top (game iloc THROWOUT))))
      
      (all player 'P
           (move (top (game iloc STOCK))
                 (top ('P vloc HAND))))))
 
 ;; Stage here, find the player with smallest card
 ;; if tied, deal new card and try again
 ;; Stage, for tied players if dealt a pair, then discard and do it again
 ;;         (stage player
 ;;                (end (== (game sto FINISHED) 1))
 ;;                ;; how to say this? what does min do with more than 1 value? 
 ;;                (let (min (union (all player 'P ('P vloc HAND))) using (game points POINTS)) 'L
 ;;                  ((== (size 'L) 1)
 ;;                   (set (game sto FINISHED) 1))
 ;;                  ((!= (size 'L) 1)
 ;;                   (all player 'P
 ;;                        (do (
 ;;                             (move (top (game iloc HAND))
 ;;                                   (top ('P vloc STOCK)))
 ;;                             (shuffle (game iloc STOCK))
 ;;                             (move (top (game iloc STOCK))
 ;;                                   (top ('P vloc HAND)))))))))
 ;;           
 (do 
     (
      (cycle current (owner (min (union (all player 'P ('P vloc HAND))) using (game points POINTS))))))
 
 (stage player
        (end 
         (any player 'P 
              (>= (sum ('P vloc SCORING) using (game points POINTS)) (+ (// 60 'NUMP) 1)))) 
        
        ;; Shuffle and then throw out 5 cards for mystery      
        (do 
            (
             ((== (size (game iloc STOCK)) 0)
              (do 
                  (
                   (repeat all
                           (move (top (game iloc THROWOUT))
                                 (top (game iloc STOCK))))
                   (repeat all
                           (move (top (game vloc DISCARD))
                                 (top (game iloc STOCK))))
                   (shuffle (game iloc STOCK))          
                   (repeat 5
                           (move (top (game iloc STOCK))
                                 (top (game iloc THROWOUT)))))))))
        
        ;; players flip a card or bow out
        (choice 
         (
          
          ((> (size ((current player) vloc HAND)) 0)
           (do 
               (
                (move (actual (min (union (all player 'P ('P vloc HAND))) using (game points POINTS)))
                      (top ((current player) vloc SCORING)))
                (repeat all
                        (move (top ((current player) vloc HAND))
                              (top (game vloc DISCARD)))))))
          
          (do 
              (
               (move (top (game iloc STOCK))
                     (top ((current player) vloc HAND)))))))
        
        ;; if pair, end the round
        (do 
            (
             ((> (size (tuples 2 ((current player) vloc HAND) using (game points POINTS))) 0)
              (do 
                  (
                   (move (actual (top (top (tuples 2 ((current player) vloc HAND) using (game points POINTS)))))
                         (top ((current player) vloc SCORING)))
                   (repeat all
                           (move (top ((current player) vloc HAND))
                                 (top (game vloc DISCARD))))))))))
 
 (scoring min (sum ((current player) vloc SCORING) using (game points POINTS))))