;; Comet
;;
;; http://www.catsatcards.com/Games/Comet.html

(game
 (declare 2 'NUMP)
 (setup 
  (create players 'NUMP)
  
  ;; Create the deck source 
  (repeat 2 (create deck (game iloc STOCK) (deck (RANK (TWO, THREE, FOUR, FIVE, SIX, SEVEN, 
                                                        EIGHT, TEN, JACK, QUEEN, KING))
                                                 (COLOR (BLACK (SUIT (CLUBS, SPADES)))))))
  (repeat 2 (create deck (game iloc STOCK) (deck (RANK (NINE)) 
                                       (COLOR (BLACK (SUIT (SPADES)))))))
  (create deck (game iloc STOCK) (deck (RANK (NINE)) 
                                       (COLOR (BLACK (SUIT (CLUBS))))))
  (create deck (game iloc STOCK) (deck (RANK (NINE)) 
                                       (COLOR (RED (SUIT (DIAMONDS)))))))

 
 ;; Shuffle and deal each player 18 cards
 (do 
     (
      (shuffle (game iloc STOCK))
      (set (game points PRECEDENCE) 
        (
            ((RANK : KING) 13)
            ((RANK : QUEEN) 12)
            ((RANK : JACK) 11)
            ((RANK : TEN) 10)
            ((RANK : NINE) 9)
            ((RANK : EIGHT) 8)
            ((RANK : SEVEN) 7)
            ((RANK : SIX) 6)
            ((RANK : FIVE) 5)
            ((RANK : FOUR) 4)
            ((RANK : THREE) 3)
            ((RANK : TWO) 2)
      ))      
      (set (game points POINTS) 
        (
            ((RANK : KING) 10)
            ((RANK : QUEEN) 10)
            ((RANK : JACK) 10)
            ((RANK : TEN) 10)
            ((RANK : NINE) 9)
            ((RANK : EIGHT) 8)
            ((RANK : SEVEN) 7)
            ((RANK : SIX) 6)
            ((RANK : FIVE) 5)
            ((RANK : FOUR) 4)
            ((RANK : THREE) 3)
            ((RANK : TWO) 2)
      ))      
      (all player 'P 
           (repeat 18
                   (move (top (game iloc STOCK))
                         (top ('P iloc HAND)))))))
   
 ;; players play until one is out of cards         
 (stage player
        (end 
         (any player 'P 
              (== (size ('P iloc HAND)) 0)))

      (choice (

            ;; First of new sequence, play anything
            ((== (size (game vloc SEQUENCE)) 0)
             (any ((current player) iloc HAND) 'C 
                  (do (
                        (move 'C (top (game vloc SEQUENCE)))
                  ))
             )
            )

            ;; nothing matches the current sequence
            ((and (> (size (game vloc SEQUENCE)) 0)
                  (== (size (filter ((current player) iloc HAND) 'FC 
                              (== (score 'FC using (game points PRECEDENCE))
                                    (+ 1 (score (top (game vloc SEQUENCE)) 
                                          using (game points PRECEDENCE)))))) 0))
                         (inc (game sto PASSING) 1)
            )

            ;; play anything that matches the current sequence
            ((> (size (game vloc SEQUENCE)) 0)
             (any (filter ((current player) iloc HAND) 'FC 
                        (== (score 'FC using (game points PRECEDENCE))
                            (+ 1 (score (top (game vloc SEQUENCE)) using (game points PRECEDENCE)))))
                       'C
                       
                       (do (
                        (move 'C (top (game vloc SEQUENCE)))
                  )))        
            )

            ;; FOUR OF A KIND THAT IS NEXT (or 3 9s TODO)
            ((and (> (size (game vloc SEQUENCE)) 0)
                  (== (size (filter ((current player) iloc HAND) 'FC 
                        (== (score 'FC using (game points PRECEDENCE))
                            (+ 1 (score (top (game vloc SEQUENCE)) using (game points PRECEDENCE))))))
                  4))
             (do ((all (filter ((current player) iloc HAND) 'FC 
                        (== (score 'FC using (game points PRECEDENCE))
                            (+ 1 (score (top (game vloc SEQUENCE)) using (game points PRECEDENCE))))) 
                  'FCM 
                  (move 'FCM (top (game vloc SEQUENCE))))
                  (set (game str ALLFOUR) TRUE)
             ))
                             
            )
      ))


      (do (
            ;; if you have the next card, or play a king or Comet, then you get to go again
            ((or (== (cardatt RANK (top (game vloc SEQUENCE))) KING)
                 (== (cardatt COLOR (top (game vloc SEQUENCE))) RED)
                 (!= (size (filter ((current player) iloc HAND) 'FC 
                        (== (score 'FC using (game points PRECEDENCE))
                              (+ 1 (score (top (game vloc SEQUENCE)) 
                                    using (game points PRECEDENCE)))))) 0))
             (cycle next current)
            )

            ;; if Comet played, then two points to the player
            ((== (cardatt COLOR (top (game vloc SEQUENCE))) RED)
             (inc ((current player) sto SCORE) 2)
            )

            ;; if stop played, then discard the sequence
            ((or (== (cardatt RANK (top (game vloc SEQUENCE))) KING) ;; King is stop
                 (== (game sto PASSING) (- 'NUMP 1)) ;; all passing is stop
                 (== (cardatt COLOR (top (game vloc SEQUENCE))) RED)) ;; 9 of diamonds (Comet) is stop
             (do (
                  (set (game sto PASSING) 0)
                  (repeat all (move (top (game vloc SEQUENCE))
                                    (top (game vloc DISCARD))))
             ))
            )
      ))         
 )

 (stage player (end 
                (all player 'P (== (size ('P iloc HAND)) 0)))
      (do (
            ((> (size ((current player) iloc HAND)) 0)
             (set ((current player) sto GIFT) (sum ((current player) iloc HAND) using (game points POINTS))))
            ((== (size (filter ((current player) iloc HAND) 'FH 
                        (== (cardatt COLOR 'FH) RED))) 1)
             (set ((current player) sto GIFT) (* ((current player) sto GIFT) 2))
            )
            (inc ((next player) sto SCORE) ((current player) sto GIFT))
            (repeat all (move (top ((current player) iloc HAND))
                              (top (game vloc DISCARD))))
            
      ))
 )

 (scoring max ((current player) sto SCORE)))
